// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client_auth {
  provider = "prisma-client-js"
  output   = "../../../apps/auth/node_modules/.prisma/client"
}

generator client {
  provider = "prisma-client-js"
}

generator client_forms {
  provider = "prisma-client-js"
  output   = "../../../apps/forms/node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  last_name    String
  email        String  @unique
  password     String
  phone_number String
  companyId    String  @db.ObjectId
  company      Company @relation(fields: [companyId], references: [id])
}

model Company {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  users User[]
  forms Form[]
}

model Form {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  title       String
  description String?
  status      Boolean
  companyId   String      @db.ObjectId
  company     Company     @relation(fields: [companyId], references: [id])
  creator     String
  responses   Int
  inputs      FormInput[]
}

model FormInput {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  label       String
  placeholder String?
  type        String
  formId      String        @db.ObjectId
  form        Form          @relation(fields: [formId], references: [id])
  options     InputOption[]
}

model InputOption {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  value       String
  formInputId String    @db.ObjectId
  formInput   FormInput @relation(fields: [formInputId], references: [id])
}

model Filter {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  conditional String
  value       String
}
